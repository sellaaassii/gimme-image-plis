[{"/Users/selasi/Desktop/gimme-image-plis/client/src/index.js":"1","/Users/selasi/Desktop/gimme-image-plis/client/src/reportWebVitals.js":"2","/Users/selasi/Desktop/gimme-image-plis/client/src/App.js":"3","/Users/selasi/Desktop/gimme-image-plis/client/src/Login.js":"4","/Users/selasi/Desktop/gimme-image-plis/client/src/Dashboard.js":"5","/Users/selasi/Desktop/gimme-image-plis/client/src/Register.js":"6","/Users/selasi/Desktop/gimme-image-plis/client/src/Search.js":"7","/Users/selasi/Desktop/gimme-image-plis/client/src/Lost.js":"8","/Users/selasi/Desktop/gimme-image-plis/client/src/Album.js":"9","/Users/selasi/Desktop/gimme-image-plis/client/src/Navbar.js":"10","/Users/selasi/Desktop/gimme-image-plis/client/src/Photo.js":"11"},{"size":591,"mtime":1610779769308,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1610245164806,"results":"14","hashOfConfig":"13"},{"size":1744,"mtime":1610787405862,"results":"15","hashOfConfig":"13"},{"size":3247,"mtime":1610795519486,"results":"16","hashOfConfig":"13"},{"size":2935,"mtime":1610792620801,"results":"17","hashOfConfig":"13"},{"size":4028,"mtime":1610795758898,"results":"18","hashOfConfig":"13"},{"size":2320,"mtime":1610794449998,"results":"19","hashOfConfig":"13"},{"size":395,"mtime":1610680089954,"results":"20","hashOfConfig":"13"},{"size":1269,"mtime":1610795373610,"results":"21","hashOfConfig":"13"},{"size":2015,"mtime":1610795643759,"results":"22","hashOfConfig":"13"},{"size":2420,"mtime":1610795635556,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"krfev7",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"/Users/selasi/Desktop/gimme-image-plis/client/src/index.js",[],["51","52"],"/Users/selasi/Desktop/gimme-image-plis/client/src/reportWebVitals.js",[],"/Users/selasi/Desktop/gimme-image-plis/client/src/App.js",[],"/Users/selasi/Desktop/gimme-image-plis/client/src/Login.js",[],"/Users/selasi/Desktop/gimme-image-plis/client/src/Dashboard.js",[],"/Users/selasi/Desktop/gimme-image-plis/client/src/Register.js",["53","54"],"import './Register.css'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './fonts/fontawesome-all.min.css';\nimport './fonts/font-awesome.min.css';\nimport './fonts/fontawesome5-overrides.min.css';\nimport background from './image2.jpeg';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport React, { Component } from \"react\";\n\nclass Register extends Component {\n\n  state = {\n   response: '',\n   email: '',\n   password: '',\n   confirm: '',\n   name: '',\n   errors: {},\n   error: ''\n\n };\n\n\n handleSubmit = async e => {\n   e.preventDefault();\n\n   const response = await fetch('/api/user/register', {\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json',\n     },\n     body: JSON.stringify({\n       password: this.state.password,\n       email: this.state.email,\n       confirm: this.state.confirm,\n       name: this.state.name\n     }),\n   });\n\n   const body = await response.json();\n\n   if (response.status === 200) {\n     //redirect to login page\n     this.props.history.push(\"/login\");\n   } else {\n     this.setState({ errors: body.errors,  error: body.error });\n   }\n\n };\n\n\n  render() {\n  return(\n    <div className=\"container\">\n        <div className=\"card shadow-lg o-hidden border-0 my-5\">\n            <div className=\"card-body p-0\">\n                <div className=\"row\">\n                    <div className=\"col-lg-5 d-none d-lg-flex\">\n                        <div className=\"flex-grow-1 bg-register-image\" style={{backgroundImage: `url(${background})`}}></div>\n                    </div>\n                    <div className=\"col-lg-7\">\n                        <div className=\"p-5\">\n                            <div className=\"text-center\">\n                                <p className=\"error-message\">{this.state.error}</p>\n                                <h4 className=\"text-dark mb-4\">Create an Account!</h4>\n                            </div>\n                            <form className=\"user\" onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                  <input className=\"form-control form-control-user\" type=\"text\" id=\"exampleFirstName\" placeholder=\"Full Name\" name=\"first_name\" onChange={e => this.setState({ name : e.target.value })}/>\n                                </div>\n                                <p className=\"error-message\">{this.state.errors.nameMessage}</p>\n                                <div className=\"form-group\"><input className=\"form-control form-control-user\" type=\"email\" id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Email Address\" name=\"email\" onChange={e => this.setState({ email : e.target.value })}/></div>\n                                <p className=\"error-message\">{this.state.errors.emailMessage}</p>\n                                <div className=\"form-group row\">\n                                    <div className=\"col-sm-6 mb-3 mb-sm-0\"><input className=\"form-control form-control-user\" type=\"password\" id=\"examplePasswordInput\" placeholder=\"Password\" name=\"password\" onChange={e => this.setState({ password : e.target.value })}/></div>\n                                    <div className=\"col-sm-6\"><input className=\"form-control form-control-user\" type=\"password\" id=\"exampleRepeatPasswordInput\" placeholder=\"Repeat Password\" name=\"password_repeat\" onChange={e => this.setState({ confirm : e.target.value })}/></div>\n                                </div><p className=\"error-message\">{this.state.errors.passwordMessage}</p><button className=\"btn btn-primary btn-block text-white btn-user\" type=\"submit\">Register Account</button>\n                                <hr/>\n                            </form>\n                            <div className=\"text-center\"></div>\n                            <div className=\"text-center\"><Link className=\"small\" to=\"/login\">Already have an account? Login!</Link></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  );\n}\n}\n\nexport default Register;\n","/Users/selasi/Desktop/gimme-image-plis/client/src/Search.js",[],"/Users/selasi/Desktop/gimme-image-plis/client/src/Lost.js",[],"/Users/selasi/Desktop/gimme-image-plis/client/src/Album.js",["55"],"import './Album.css'\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Photo from './Photo.js'\n\n\n\nclass Album extends Component {\n\n  state = {\n    emailExists: '',\n    photos: []\n  };\n\n  componentDidMount() {\n    this.getPhotos()\n    .then(res => {\n      this.setState({photos: res.photos})\n    })\n    .catch(error => console.log(error));\n  }\n\n  getPhotos = async () => {\n    const email = localStorage.email;\n\n    if (email) {\n      this.setState({ emailExists: email });\n\n      const response = await fetch('/api/photo', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'email': email,\n        },\n      });\n\n      const body = await response.json();\n\n      if (response.status !== 200) throw Error(body.message);\n\n      return body;\n    }\n  }\n\n  render() {\n\n    const loggedIn = localStorage.token;\n\n    if(!loggedIn) {\n      return <Redirect to=\"/login\" />\n    }\n\n  return (\n    <div className=\"Search\">\n    <h1 className=\"album-title\">ALBUM</h1>\n    { this.state.photos.length === 0 ? <h2>No Photos uploaded</h2> : <h2></h2> }\n    <div className=\"album\">{this.state.photos.map(id => (\n      <Photo photoid={id}/>\n    ))}</div>\n    </div>\n  );\n}\n}\n\nexport default Album;\n","/Users/selasi/Desktop/gimme-image-plis/client/src/Navbar.js",["56","57"],"import 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from \"react\";\nimport { withRouter } from 'react-router-dom';\n\nclass NavBar extends Component {\n\n  state = {\n    name: ''\n  }\n\n  componentDidMount() {\n    const token = localStorage.token\n\n    if (token) {\n      this.getUserInfo()\n        .then(res => {\n          localStorage.setItem('username', res.name)\n          localStorage.setItem('email', res.email)\n\n          this.setState({name: res.name})\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  getUserInfo = async () => {\n    const response = await fetch('/api/user/whoami', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'token': localStorage.token,\n      },\n    });\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-light navbar-expand-md navigation-clean-button\">\n          <div className=\"container\"><a className=\"navbar-brand\" href=\"/home\">Shopstagram</a><button data-toggle=\"collapse\" className=\"navbar-toggler\" data-target=\"#navcol-1\"><span className=\"sr-only\">Toggle navigation</span><span className=\"navbar-toggler-icon\"></span></button>\n              <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\n                  <ul className=\"nav navbar-nav mr-auto\">\n                      <li className=\"nav-item\"><a className=\"nav-link\" href=\"/home\">Home</a></li>\n                      <li className=\"nav-item\"><a className=\"nav-link\" href=\"/album\">Album</a></li>\n                      <li className=\"nav-item\"><a className=\"nav-link\" href=\"/search\">Search</a></li>\n                  </ul><span className=\"navbar-text actions\"> <a className=\"login\">Welcome {this.state.name}!</a><a className=\"btn btn-light action-button\" role=\"button\" onClick={this.props.logout}>Logout</a></span>\n              </div>\n          </div>\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(NavBar);\n","/Users/selasi/Desktop/gimme-image-plis/client/src/Photo.js",["58"],"import 'bootstrap/dist/css/bootstrap.css';\nimport './Photo.css';\nimport Loading from './loading.gif';\nimport React, { Component } from \"react\";\n\nclass Photo extends Component {\n\n  constructor( props ) {\n    super(props);\n    this.state = {\n      data: {},\n      contentType: '',\n      picture: {},\n      loading: true,\n      name: '',\n      caption: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getPhoto()\n      .then(res => {\n        this.setState({\n          data: res.photo.data,\n          contentType: res.photo.contentType,\n          name: res.name,\n          caption: res.caption,\n          loading: false,\n          picture: Buffer.from(res.photo.data).toString('base64')\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n\n  getPhoto = async () => {\n    const email = localStorage.email\n\n    const response = await fetch('/api/photo/'+ this.props.photoid, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'email': email,\n      },\n    });\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n\n\n  deletePhoto = async () => {\n    const email = localStorage.email\n\n    const response = await fetch('/api/photo/'+ this.props.photoid, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'email': email,\n      },\n    });\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n\n    // reload after deletion to allow photo component to be removed\n    window.location.reload(false);\n  };\n\n\n  render() {\n\n    return (\n      <div className=\"photoOutline\">\n        <div >\n          {this.state.loading ? <img src={Loading} alt=\"Loading\"/>\n          : <img className=\"uploaded-image\" src={`data:image/png;base64,${this.state.picture}`} alt=\"Picture\"/>}\n        </div>\n        <div className=\"text-section\">\n          <p className=\"filename\"><span className=\"filename-bold\">Filename:</span> {this.state.loading ? \"\" : this.state.name}</p>\n          <p className=\"uploaded-caption caption-title\"><span className=\"caption-title-bold\">Caption:</span> {this.state.loading ? \"\" : this.state.caption}</p>\n          <button className=\"btn btn-danger deleteButton\" type=\"button\" onClick={this.deletePhoto} disabled={this.state.loading}>Remove</button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Photo;\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":7,"column":10,"nodeType":"65","messageId":"66","endLine":7,"endColumn":16},{"ruleId":"63","severity":1,"message":"67","line":7,"column":18,"nodeType":"65","messageId":"66","endLine":7,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":56,"column":70,"nodeType":"70","endLine":56,"endColumn":74},{"ruleId":"71","severity":1,"message":"72","line":49,"column":63,"nodeType":"70","endLine":49,"endColumn":84},{"ruleId":"71","severity":1,"message":"72","line":49,"column":114,"nodeType":"70","endLine":49,"endColumn":199},{"ruleId":"73","severity":1,"message":"74","line":77,"column":13,"nodeType":"70","endLine":77,"endColumn":112},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]